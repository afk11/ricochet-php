<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 0.9.4
// Source: AuthHiddenService.proto
//   Date: 2016-08-05 18:35:13

namespace Ricochet\Channel\AuthHiddenService\Proto {

  class Packet extends \DrSlump\Protobuf\Message {

    /**  @var \Ricochet\Channel\AuthHiddenService\Proto\Proof */
    public $proof = null;
    
    /**  @var \Ricochet\Channel\AuthHiddenService\Proto\Result */
    public $result = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'Ricochet.Channel.AuthHiddenService.Packet');

      // OPTIONAL MESSAGE proof = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "proof";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\Ricochet\Channel\AuthHiddenService\Proto\Proof';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE result = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "result";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\Ricochet\Channel\AuthHiddenService\Proto\Result';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <proof> has a value
     *
     * @return boolean
     */
    public function hasProof(){
      return $this->_has(1);
    }
    
    /**
     * Clear <proof> value
     *
     * @return \Ricochet\Channel\AuthHiddenService\Proto\Packet
     */
    public function clearProof(){
      return $this->_clear(1);
    }
    
    /**
     * Get <proof> value
     *
     * @return \Ricochet\Channel\AuthHiddenService\Proto\Proof
     */
    public function getProof(){
      return $this->_get(1);
    }
    
    /**
     * Set <proof> value
     *
     * @param \Ricochet\Channel\AuthHiddenService\Proto\Proof $value
     * @return \Ricochet\Channel\AuthHiddenService\Proto\Packet
     */
    public function setProof(\Ricochet\Channel\AuthHiddenService\Proto\Proof $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <result> has a value
     *
     * @return boolean
     */
    public function hasResult(){
      return $this->_has(2);
    }
    
    /**
     * Clear <result> value
     *
     * @return \Ricochet\Channel\AuthHiddenService\Proto\Packet
     */
    public function clearResult(){
      return $this->_clear(2);
    }
    
    /**
     * Get <result> value
     *
     * @return \Ricochet\Channel\AuthHiddenService\Proto\Result
     */
    public function getResult(){
      return $this->_get(2);
    }
    
    /**
     * Set <result> value
     *
     * @param \Ricochet\Channel\AuthHiddenService\Proto\Result $value
     * @return \Ricochet\Channel\AuthHiddenService\Proto\Packet
     */
    public function setResult(\Ricochet\Channel\AuthHiddenService\Proto\Result $value){
      return $this->_set(2, $value);
    }
  }
}

